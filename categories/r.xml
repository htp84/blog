<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Henric Sundberg (Posts about R)</title><link>https://htp84.github.io/blog/</link><description></description><atom:link href="https://htp84.github.io/blog/categories/r.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2019 &lt;a href="mailto:henric.sundberg@gmail.com"&gt;Henric Sundberg&lt;/a&gt; </copyright><lastBuildDate>Sat, 29 Jun 2019 14:17:49 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>R - Cleaning excel files from the International Monetary Fund</title><link>https://htp84.github.io/blog/posts/r-cleaning-excel-files-from-imf/</link><dc:creator>Henric Sundberg</dc:creator><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Often when I browse different publically available datasets on for example Kaggle I find most of them are already tidy. Sure, to use the data for machine learning you must do feature engineering, but most of the data cleaning is already done. I believe that this bad, since most of the data in the "real" world is messy. So, in this post, I will use R to clean messy data from the IMF data homepage (International Financial Statistics) with the ultimate goal of producing a tidy dataframe. I will use the same data as I used in the post &lt;a href="https://htp84.github.io/blog/posts/python-cleaning-excel-files-from-imf/"&gt;Python - Cleaning excel files from the International Monetary Fund&lt;/a&gt;. 
&lt;/p&gt;&lt;p&gt;&lt;a href="https://htp84.github.io/blog/posts/r-cleaning-excel-files-from-imf/"&gt;Read more…&lt;/a&gt; (26 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>dplyr</category><category>R</category><category>tidyr</category><category>tidyverse</category><guid>https://htp84.github.io/blog/posts/r-cleaning-excel-files-from-imf/</guid><pubDate>Sat, 29 Jun 2019 00:00:00 GMT</pubDate></item><item><title>Python, R and TSQL comparison - Cleaning data</title><link>https://htp84.github.io/blog/posts/python-r-tsql-comparison-cleaning-data/</link><dc:creator>Henric Sundberg</dc:creator><description>&lt;div&gt;&lt;p&gt;This is the third and last part of a series of posts showing data wrangling code in Python, R and TSQL. This part show different options for cleaning data.&lt;br&gt;
&lt;/p&gt;&lt;p&gt;&lt;a href="https://htp84.github.io/blog/posts/python-r-tsql-comparison-cleaning-data/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>pandas</category><category>Python</category><category>R</category><category>tidyverse</category><category>TSQL</category><guid>https://htp84.github.io/blog/posts/python-r-tsql-comparison-cleaning-data/</guid><pubDate>Fri, 19 Apr 2019 06:00:00 GMT</pubDate></item><item><title>Python, R and TSQL comparison - Reading and writing files</title><link>https://htp84.github.io/blog/posts/python-r-tsql-comparison-reading-and-writing-files/</link><dc:creator>Henric Sundberg</dc:creator><description>&lt;div&gt;&lt;p&gt;This is the second part of a series of posts showing data wrangling code in Python, R, and TSQL. This part shows read/write options for Excel and CSV. This is not directly applicable to SQL. Therefore, there is no column for TSQL in the table below.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://htp84.github.io/blog/posts/python-r-tsql-comparison-reading-and-writing-files/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>pandas</category><category>Python</category><category>R</category><category>tidyverse</category><guid>https://htp84.github.io/blog/posts/python-r-tsql-comparison-reading-and-writing-files/</guid><pubDate>Sat, 30 Mar 2019 00:00:00 GMT</pubDate></item><item><title>Python, R and TSQL - Basic</title><link>https://htp84.github.io/blog/posts/python-r-and-tsql-basic/</link><dc:creator>Henric Sundberg</dc:creator><description>&lt;div&gt;&lt;p&gt;This is the first part of a series of articles showing data wrangling code in Python, R and TSQL that produces equivalent result. In this article I show some basic operations. &lt;br&gt;
&lt;/p&gt;&lt;p&gt;&lt;a href="https://htp84.github.io/blog/posts/python-r-and-tsql-basic/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>pandas</category><category>Python</category><category>R</category><category>tidyverse</category><category>TSQL</category><guid>https://htp84.github.io/blog/posts/python-r-and-tsql-basic/</guid><pubDate>Sat, 16 Mar 2019 00:00:00 GMT</pubDate></item></channel></rss>